-- Ensure the script is a LocalScript if not game:GetService("RunService"):IsClient() then 	error("This script must be run in Play Mode (LocalScript context).") end  print("Script is running!") -- Debug  -- Get player and PlayerGui local player = game.Players.LocalPlayer local playerGui = player:WaitForChild("PlayerGui")  -- Create ScreenGui local screenGui = Instance.new("ScreenGui") screenGui.Enabled = true screenGui.Parent = playerGui  -- Create Main Frame local frame = Instance.new("Frame") frame.Size = UDim2.new(0, 300, 0, 400) -- Smaller frame (300x400 pixels) frame.Position = UDim2.new(0.5, -150, 0.5, -200) -- Centered frame.BackgroundColor3 = Color3.new(0.05, 0.05, 0.15) frame.BackgroundTransparency = 0.2 frame.Active = true frame.Draggable = true frame.Parent = screenGui  -- Add rounded corners to the Frame local corner = Instance.new("UICorner") corner.CornerRadius = UDim.new(0, 12) corner.Parent = frame  -- Add a gradient background to the Frame local gradient = Instance.new("UIGradient") gradient.Color = ColorSequence.new({ 	ColorSequenceKeypoint.new(0, Color3.new(0.1, 0.1, 0.3)), 	ColorSequenceKeypoint.new(1, Color3.new(0.05, 0.05, 0.15)) }) gradient.Rotation = 90 gradient.Parent = frame  -- Add padding to the Frame local padding = Instance.new("UIPadding") padding.PaddingLeft = UDim.new(0, 10) -- Reduced padding padding.PaddingRight = UDim.new(0, 10) padding.PaddingTop = UDim.new(0, 10) padding.PaddingBottom = UDim.new(0, 10) padding.Parent = frame  -- Add a "V" icon at the top local vIcon = Instance.new("TextLabel") vIcon.Text = "V" vIcon.TextColor3 = Color3.new(1, 1, 1) vIcon.TextSize = 24 vIcon.Size = UDim2.new(0, 30, 0, 30) -- Smaller size vIcon.Position = UDim2.new(0.5, -15, 0, 10) vIcon.BackgroundTransparency = 1 vIcon.Parent = frame  -- Add Minimize and Exit buttons local minimizeButton = Instance.new("TextButton") minimizeButton.Text = "-" minimizeButton.TextColor3 = Color3.new(1, 1, 1) minimizeButton.TextSize = 18 minimizeButton.Size = UDim2.new(0, 30, 0, 30) -- Smaller size minimizeButton.Position = UDim2.new(1, -70, 0, 10) minimizeButton.BackgroundColor3 = Color3.new(0.2, 0.2, 0.4) minimizeButton.BackgroundTransparency = 0.3 minimizeButton.Parent = frame  local exitButton = Instance.new("TextButton") exitButton.Text = "X" exitButton.TextColor3 = Color3.new(1, 1, 1) exitButton.TextSize = 18 exitButton.Size = UDim2.new(0, 30, 0, 30) -- Smaller size exitButton.Position = UDim2.new(1, -35, 0, 10) exitButton.BackgroundColor3 = Color3.new(0.8, 0.2, 0.2) exitButton.BackgroundTransparency = 0.3 exitButton.Parent = frame  -- Add Open Button (starts minimized) local openButton = Instance.new("TextButton") openButton.Text = "+" openButton.TextColor3 = Color3.new(1, 1, 1) openButton.TextSize = 24 openButton.Size = UDim2.new(0, 40, 0, 40) -- Smaller size openButton.Position = UDim2.new(0, 10, 0, 10) openButton.BackgroundColor3 = Color3.new(0.2, 0.2, 0.4) openButton.BackgroundTransparency = 0.3 openButton.Visible = true -- Visible when minimized openButton.Parent = frame  -- Add rounded corners to the Open Button local openButtonCorner = Instance.new("UICorner") openButtonCorner.CornerRadius = UDim.new(0, 8) openButtonCorner.Parent = openButton  -- Create a ScrollingFrame for the buttons local scrollingFrame = Instance.new("ScrollingFrame") scrollingFrame.Size = UDim2.new(1, -20, 1, -80) -- Adjust size to fit inside the Frame scrollingFrame.Position = UDim2.new(0, 10, 0, 50) scrollingFrame.BackgroundTransparency = 1 scrollingFrame.ScrollBarThickness = 8 scrollingFrame.Parent = frame  -- Add a UIListLayout to the ScrollingFrame local listLayout = Instance.new("UIListLayout") listLayout.Padding = UDim.new(0, 10) -- Spacing between buttons listLayout.Parent = scrollingFrame  -- Function to create buttons local function createButton(text) 	local button = Instance.new("TextButton") 	button.Size = UDim2.new(1, -10, 0, 60) -- Larger buttons for mobile 	button.Text = text 	button.TextColor3 = Color3.new(1, 1, 1) 	button.TextSize = 18 	button.TextXAlignment = Enum.TextXAlignment.Left 	button.TextWrapped = true -- Ensure text wraps if too long 	button.TextScaled = true -- Automatically scale text to fit 	button.BackgroundColor3 = Color3.new(0.2, 0.2, 0.4) 	button.BackgroundTransparency = 0.3 	button.Parent = scrollingFrame  	-- Add rounded corners to the button 	local buttonCorner = Instance.new("UICorner") 	buttonCorner.CornerRadius = UDim.new(0, 8) 	buttonCorner.Parent = button  	-- Add a gradient to the button 	local buttonGradient = Instance.new("UIGradient") 	buttonGradient.Color = ColorSequence.new({ 		ColorSequenceKeypoint.new(0, Color3.new(0.3, 0.3, 0.6)), 		ColorSequenceKeypoint.new(1, Color3.new(0.2, 0.2, 0.4)) 	}) 	buttonGradient.Rotation = 90 	buttonGradient.Parent = button  	return button end  -- Buttons local button1 = createButton("Super Jump") local button2 = createButton("Invisibility") local button3 = createButton("Speed Boost") local button4 = createButton("Camera Lock") local button5 = createButton("Noclip") local button6 = createButton("Fly Hacks") local button7 = createButton("ESP") local button8 = createButton("Infinite Jump")  -- Store cheat buttons in a table for easy visibility toggling local cheatButtons = {button1, button2, button3, button4, button5, button6, button7, button8}  -- Animation Variables local minimizedSize = UDim2.new(0, 200, 0, 50) -- Horizontal bar local expandedSize = UDim2.new(0, 300, 0, 400) -- Smaller expanded size local isMinimized = true  -- Function to toggle GUI visibility with animation local function toggleGUI() 	if isMinimized then 		-- Expand GUI 		frame.Size = expandedSize 		openButton.Visible = false 		minimizeButton.Visible = true 		exitButton.Visible = true 		-- Show cheat buttons 		for _, button in pairs(cheatButtons) do 			button.Visible = true 		end 	else 		-- Minimize GUI 		frame.Size = minimizedSize 		openButton.Visible = true 		minimizeButton.Visible = false 		exitButton.Visible = false 		-- Hide cheat buttons 		for _, button in pairs(cheatButtons) do 			button.Visible = false 		end 	end 	isMinimized = not isMinimized end  -- Function to close GUI local function closeGUI() 	frame.Size = minimizedSize 	openButton.Visible = true 	minimizeButton.Visible = false 	exitButton.Visible = false 	isMinimized = true 	-- Hide cheat buttons 	for _, button in pairs(cheatButtons) do 		button.Visible = false 	end end  -- Connect buttons to toggle GUI local userInputService = game:GetService("UserInputService")  -- Handle both mouse clicks and touch input local function connectButton(button, callback) 	button.MouseButton1Click:Connect(callback) -- For PC 	button.TouchTap:Connect(callback) -- For mobile end  connectButton(openButton, toggleGUI) connectButton(minimizeButton, toggleGUI) connectButton(exitButton, closeGUI)  -- Start minimized frame.Size = minimizedSize openButton.Visible = true minimizeButton.Visible = false exitButton.Visible = false -- Hide cheat buttons initially for _, button in pairs(cheatButtons) do 	button.Visible = false end  -- Super Jump Toggle connectButton(button1, function() 	local character = player.Character or player.CharacterAdded:Wait() 	local humanoid = character:FindFirstChild("Humanoid") 	if humanoid then 		humanoid.JumpPower = humanoid.JumpPower == 50 and 100 or 50 		button1.Text = humanoid.JumpPower == 100 and "Super Jump (ON)" or "Super Jump (OFF)" 	end end)  -- Invisibility Toggle connectButton(button2, function() 	local character = player.Character or player.CharacterAdded:Wait() 	local isInvisible = character.PrimaryPart.Transparency == 1  	-- Toggle transparency for all BaseParts 	for _, part in pairs(character:GetDescendants()) do 		if part:IsA("BasePart") then 			part.Transparency = isInvisible and 0 or 1 		end 	end  	-- Toggle visibility of accessories (hats, etc.) 	for _, accessory in pairs(character:GetDescendants()) do 		if accessory:IsA("Accessory") and accessory:FindFirstChild("Handle") then 			accessory.Handle.Transparency = isInvisible and 0 or 1 		end 	end  	-- Update button text 	button2.Text = isInvisible and "Invisibility (OFF)" or "Invisibility (ON)" end)  -- Speed Boost Toggle connectButton(button3, function() 	local character = player.Character or player.CharacterAdded:Wait() 	local humanoid = character:FindFirstChild("Humanoid") 	if humanoid then 		humanoid.WalkSpeed = humanoid.WalkSpeed == 16 and 50 or 16 		button3.Text = humanoid.WalkSpeed == 50 and "Speed Boost (ON)" or "Speed Boost (OFF)" 	end end)  -- Camera Lock Toggle local cameraLockActive = false connectButton(button4, function() 	cameraLockActive = not cameraLockActive 	button4.Text = cameraLockActive and "Camera Lock (ON)" or "Camera Lock (OFF)" end)  -- Noclip Toggle local noclipActive = false connectButton(button5, function() 	noclipActive = not noclipActive 	button5.Text = noclipActive and "Noclip (ON)" or "Noclip (OFF)"  	game:GetService("RunService").Stepped:Connect(function() 		if noclipActive and player.Character then 			for _, part in pairs(player.Character:GetDescendants()) do 				if part:IsA("BasePart") then 					part.CanCollide = false 				end 			end 		end 	end) end)  -- Fly Hacks Toggle local flyHacksActive = false local bodyVelocity local bodyGyro  connectButton(button6, function() 	flyHacksActive = not flyHacksActive 	button6.Text = flyHacksActive and "Fly Hacks (ON)" or "Fly Hacks (OFF)"  	local character = player.Character or player.CharacterAdded:Wait() 	local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")  	if flyHacksActive and humanoidRootPart then 		-- Create BodyVelocity and BodyGyro for flying 		bodyVelocity = Instance.new("BodyVelocity") 		bodyVelocity.Velocity = Vector3.new(0, 0, 0) 		bodyVelocity.MaxForce = Vector3.new(math.huge, math.huge, math.huge) 		bodyVelocity.Parent = humanoidRootPart  		bodyGyro = Instance.new("BodyGyro") 		bodyGyro.MaxTorque = Vector3.new(math.huge, math.huge, math.huge) 		bodyGyro.P = 10000 		bodyGyro.D = 100 		bodyGyro.CFrame = humanoidRootPart.CFrame 		bodyGyro.Parent = humanoidRootPart  		-- Handle user input for flying 		local flySpeed = 50  		userInputService.InputBegan:Connect(function(input, gameProcessed) 			if gameProcessed then return end  			if input.KeyCode == Enum.KeyCode.Space then -- Fly up 				bodyVelocity.Velocity = Vector3.new(0, flySpeed, 0) 			elseif input.KeyCode == Enum.KeyCode.LeftShift then -- Fly down 				bodyVelocity.Velocity = Vector3.new(0, -flySpeed, 0) 			end 		end)  		userInputService.InputEnded:Connect(function(input, gameProcessed) 			if gameProcessed then return end  			if input.KeyCode == Enum.KeyCode.Space or input.KeyCode == Enum.KeyCode.LeftShift then 				bodyVelocity.Velocity = Vector3.new(0, 0, 0) -- Stop vertical movement 			end 		end) 	else 		-- Clean up fly hacks 		if bodyVelocity then 			bodyVelocity:Destroy() 			bodyVelocity = nil 		end 		if bodyGyro then 			bodyGyro:Destroy() 			bodyGyro = nil 		end 	end end)  -- ESP Toggle local espActive = false local espBoxes = {} connectButton(button7, function() 	espActive = not espActive 	button7.Text = espActive and "ESP (ON)" or "ESP (OFF)"  	if espActive then 		for _, otherPlayer in ipairs(game.Players:GetPlayers()) do 			if otherPlayer ~= player and otherPlayer.Character then 				local character = otherPlayer.Character 				local humanoidRootPart = character:FindFirstChild("HumanoidRootPart") 				if humanoidRootPart then 					local box = Instance.new("BoxHandleAdornment") 					box.Size = humanoidRootPart.Size 					box.Adornee = humanoidRootPart 					box.AlwaysOnTop = true 					box.ZIndex = 10 					box.Transparency = 0.5 					box.Color3 = Color3.new(1, 0, 0) 					box.Parent = humanoidRootPart 					espBoxes[otherPlayer] = box 				end 			end 		end 	else 		for _, box in pairs(espBoxes) do 			box:Destroy() 		end 		espBoxes = {} 	end end)  -- Infinite Jump Toggle local infiniteJumpActive = false connectButton(button8, function() 	infiniteJumpActive = not infiniteJumpActive 	button8.Text = infiniteJumpActive and "Infinite Jump (ON)" or "Infinite Jump (OFF)" end)  -- Infinite Jump Logic userInputService.JumpRequest:Connect(function() 	if infiniteJumpActive then 		local character = player.Character 		if character then 			local humanoid = character:FindFirstChild("Humanoid") 			if humanoid then 				humanoid:ChangeState(Enum.HumanoidStateType.Jumping) 			end 		end 	end end)  print("UI created and initialized!") -- Debug
